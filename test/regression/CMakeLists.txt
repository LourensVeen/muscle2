enable_testing()

add_test(MuscleVersion muscle2 --version)

macro (do_test2 cxa result)
  set (CXA_FILE "${CMAKE_INSTALL_PREFIX}/share/muscle/examples/cxa/${cxa}")
  add_test (Muscle2Test-${cxa} muscle2 -mac ${CXA_FILE})
  set_tests_properties (Muscle2Test-${cxa} PROPERTIES PASS_REGULAR_EXPRESSION ${result})
  set_tests_properties (Muscle2Test-${cxa} PROPERTIES TIMEOUT 30)
endmacro (do_test2)

macro (do_test2_exec exec cxa result)
  set (CXA_FILE "${CMAKE_INSTALL_PREFIX}/share/muscle/examples/cxa/${cxa}")
  set (CXA_EXEC "${CMAKE_INSTALL_PREFIX}/share/muscle/examples/${exec}/${exec}")
  add_test (Muscle2ExecTest-${cxa} ${CXA_EXEC} -- -mac ${CXA_FILE})
  set_tests_properties (Muscle2ExecTest-${cxa} PROPERTIES PASS_REGULAR_EXPRESSION ${result})
  set_tests_properties (Muscle2ExecTest-${cxa} PROPERTIES TIMEOUT 30)
endmacro (do_test2_exec)

if (BUILD_EXAMPLES)
    do_test2("SimpleExample.cxa.rb"  "got: 0.5")
    do_test2("SimpleExampleDoubleFilter.cxa.rb"  "got: 2.4")
    do_test2("Triangle.cxa.rb"  "Got from Three: 3.0")
    do_test2("PingPong.cxa.rb"  "All local submodels have finished")
    do_test2("SimpleSubmodelExample.cxa.rb"  "(1.0\t2.0\t)")
    do_test2("Terminals.cxa.rb"  "boolMask.3.dat")
    if (BUILD_CPP)
        do_test2("NativeExample2.cxa.rb"  "got: 2.0")
        do_test2("HalfNativeExample.cxa.rb"  "got: 2.0")
        do_test2("TransmutableExample2.cxa.rb"  "t: 2")
        add_test(NativeReconnect muscle2 -mac "${CMAKE_INSTALL_PREFIX}/share/muscle/examples/cxa/NativeExample2.cxa.rb" --native-reconnect)
  	set_tests_properties (NativeReconnect PROPERTIES PASS_REGULAR_EXPRESSION "got: 2.0")
  	set_tests_properties (NativeReconnect PROPERTIES TIMEOUT 30)
        if (BUILD_MPI_EXAMPLES)
            do_test2("LHC2.cxa.rb"  "LHC:Final proton energy: 12")
        endif (BUILD_MPI_EXAMPLES)
        do_test2("PingPongCpp.cxa.rb"  "         8")
        do_test2("DataIntegrity.cxa.rb"  "tests passed")
        do_test2("DataIntegrityCompress.cxa.rb"  "tests passed")
        do_test2_exec("simplecpp2" "NativeExample2.cxa.rb"  "got: 2.0")
        do_test2_exec("transmutable2" "TransmutableExample2.cxa.rb"  "t: 2")
    	if (BUILD_FORTRAN)
    		do_test2("SimpleFortranExample.cxa.rb" "got: 2.0")
    	endif (BUILD_FORTRAN)
        if (BUILD_PYTHON)
            do_test2("SimplePythonExample.cxa.rb" "received: the original data")
        endif (BUILD_PYTHON)
    endif (BUILD_CPP)
endif(BUILD_EXAMPLES)

if (BUILD_TEST)
    if (BUILD_MTO OR BUILD_CPP)
        set (MUSCLE2UTIL_TESTER "${CMAKE_INSTALL_PREFIX}/share/muscle/test/muscle2util_tester")
        add_test (Muscle2UtilTest ${MUSCLE2UTIL_TESTER})
        set_tests_properties (Muscle2UtilTest PROPERTIES PASS_REGULAR_EXPRESSION "0 of")
        set_tests_properties (Muscle2UtilTest PROPERTIES TIMEOUT 5)
    endif()
    
    if (BUILD_MTO)
        set (MTO_TESTER "${CMAKE_INSTALL_PREFIX}/share/muscle/test/mto_tester")
        add_test (MTOTest ${MTO_TESTER})
        set_tests_properties (MTOTest PROPERTIES PASS_REGULAR_EXPRESSION "0 of")
        set_tests_properties (MTOTest PROPERTIES TIMEOUT 5)
    endif (BUILD_MTO)
endif (BUILD_TEST)
#legacy examples
#do_test("NativeExample.cxa.rb" "r w" "got: 2.0")
